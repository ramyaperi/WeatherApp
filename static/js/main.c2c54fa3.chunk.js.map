{"version":3,"sources":["actions/fetchData.js","util/utils.js","components/LoadingPage.js","components/BarChart.js","components/Weather.js","components/ErrorBoundary.js","components/App.js","util/serviceWorker.js","reducers/fetchData_reducer.js","reducers/index.js","index.js"],"names":["HAS_ERRORED","IS_LOADING","FETCH_DATA_SUCCESS","isLoading","type","fetchData","url","dispatch","fetch","then","response","ok","Error","statusText","json","fetchedData","data","date","day","hour","weather","dates","tempWeather","barDataFah","barDataCelcius","i","length","convertUTCDateToLocalDate","dt","toString","split","slice","join","getHours","temp","main","min_temp","temp_min","max_temp","temp_max","hasOwnProperty","push","parseFloat","toCelsius","avg","hoursinday","Object","keys","toFixed","temp_celcius","min_temp_celcius","max_temp_celcius","consolidateAverage","console","log","Celcius","Fahrenheit","organizeWeatherData","list","catch","hasErrored","Date","newDate","getTime","getTimezoneOffset","offset","hours","setHours","LoadingPage","props","react_default","a","createElement","Grid","container","justify","spacing","BarChart","this","Fragment","index_esm","chartType","height","loader","options","title","hAxis","minValue","vAxis","Component","Weather","_Component","_getPrototypeOf2","_this","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","units","showWeather","selectedValue","handleUnitsChange","event","setState","target","value","weatherBarDay","deviceLimit","deviceDays","handleBackArrowClick","handleForwardArrowClick","handleCardActionClick","barData","inherits","createClass","key","window","innerWidth","_this2","className","Typography","variant","color","days","RadioGroup","name","aria-label","onChange","row","map","FormControlLabel","control","Radio","label","IconButton","disabled","onClick","ArrowBack","ArrowForward","item","Card","assign","style","background","CardActionArea","CardContent","Divider","light","xs","components_BarChart","components_LoadingPage","connect","FETCH_WEATHER","FETCH_DAYS","FETCH_BARDATA","ErrorBoundary","hasError","children","error","App","components_ErrorBoundary","components_Weather","Boolean","location","hostname","match","initialstate","undefined","action","objectSpread","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c2c54fa3.chunk.js","sourcesContent":["export const HAS_ERRORED = \"HAS_ERRORED\";\r\nexport const IS_LOADING = \"IS_LOADING\";\r\nexport const FETCH_DATA_SUCCESS = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_WEATHER = \"weather\";\r\nexport const FETCH_DAYS = \"days\";\r\nexport const FETCH_BARDATA = \"barData\";\r\n\r\nexport function hasErrored(hasErrored) {\r\n  return {\r\n    type: HAS_ERRORED,\r\n    hasErrored\r\n  };\r\n}\r\n\r\nexport function isLoading(isLoading) {\r\n  return {\r\n    type: IS_LOADING,\r\n    isLoading\r\n  };\r\n}\r\n\r\nexport function fetchDataSuccess(data) {\r\n  return {\r\n    type: FETCH_DATA_SUCCESS,\r\n    data\r\n  };\r\n}\r\n","import { isLoading, hasErrored, fetchDataSuccess } from \"../actions\";\r\n\r\nexport function fetchData(url) {\r\n  return dispatch => {\r\n    dispatch(isLoading(true));\r\n\r\n    fetch(url)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw Error(response.statusText);\r\n        }\r\n\r\n        dispatch(isLoading(false));\r\n\r\n        return response;\r\n      })\r\n      .then(response => response.json())\r\n      .then(fetchedData =>\r\n        dispatch(fetchDataSuccess(organizeWeatherData(fetchedData.list)))\r\n      )\r\n      .catch(() => dispatch(hasErrored(true)));\r\n  };\r\n}\r\n\r\nfunction organizeWeatherData(response) {\r\n  var weather = {};\r\n  var dates = [];\r\n  var date, day, hour;\r\n  var tempWeather = {};\r\n  var barDataFah = {};\r\n  var barDataCelcius = {};\r\n\r\n  for (var i = 0; i < response.length; i++) {\r\n    date = convertUTCDateToLocalDate(response[i].dt);\r\n    day = date\r\n      .toString()\r\n      .split(\" \")\r\n      .slice(0, 4)\r\n      .join(\" \");\r\n    hour = date.getHours();\r\n\r\n    tempWeather = {};\r\n    tempWeather.temp = response[i].main.temp;\r\n    tempWeather.min_temp = response[i].main.temp_min;\r\n    tempWeather.max_temp = response[i].main.temp_max;\r\n\r\n    if (weather.hasOwnProperty(day)) {\r\n      barDataFah[day].push([parseFloat(hour), tempWeather.temp]);\r\n      barDataCelcius[day].push([parseFloat(hour), toCelsius(tempWeather.temp)]);\r\n      weather[day].avg.temp += tempWeather.temp;\r\n\r\n      if (weather[day].avg.min_temp > tempWeather.min_temp) {\r\n        weather[day].avg.min_temp = tempWeather.min_temp;\r\n      }\r\n      if (weather[day].avg.max_temp < tempWeather.max_temp) {\r\n        weather[day].avg.max_temp = tempWeather.max_temp;\r\n      }\r\n    } else {\r\n      weather[day] = {};\r\n      weather[day].avg = {};\r\n      barDataFah[day] = [[\"Hour\", \"Temparature °F\"]];\r\n      barDataCelcius[day] = [[\"Hour\", \"Temparature °C\"]];\r\n      dates.push(day);\r\n      barDataFah[day].push([parseFloat(hour), tempWeather.temp]);\r\n      barDataCelcius[day].push([parseFloat(hour), toCelsius(tempWeather.temp)]);\r\n      weather[day].avg.temp = tempWeather.temp;\r\n      weather[day].avg.min_temp = tempWeather.min_temp;\r\n      weather[day].avg.max_temp = tempWeather.max_temp;\r\n    }\r\n    weather[day][hour] = {};\r\n    weather[day][hour] = tempWeather;\r\n  }\r\n\r\n  consolidateAverage(weather);\r\n  console.log(weather);\r\n  var barData = {\r\n    Celcius: barDataCelcius,\r\n    Fahrenheit: barDataFah\r\n  };\r\n  return [dates, weather, barData];\r\n}\r\n\r\nfunction toCelsius(temp) {\r\n  return parseFloat(((temp - 32) * 5) / 9);\r\n}\r\n\r\nfunction convertUTCDateToLocalDate(date) {\r\n  date = new Date(date * 1000);\r\n  var newDate = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\r\n\r\n  var offset = date.getTimezoneOffset() / 60;\r\n  var hours = date.getHours();\r\n\r\n  newDate.setHours(hours - offset);\r\n  return newDate;\r\n}\r\n\r\nfunction consolidateAverage(weather) {\r\n  var hoursinday;\r\n  for (var day in weather) {\r\n    //-1 for the avg key\r\n    hoursinday = Object.keys(weather[day]).length - 1;\r\n    weather[day].avg.temp = parseFloat(\r\n      weather[day].avg.temp / hoursinday\r\n    ).toFixed(1);\r\n    weather[day].avg.min_temp = parseFloat(weather[day].avg.min_temp).toFixed(\r\n      1\r\n    );\r\n    weather[day].avg.max_temp = parseFloat(weather[day].avg.max_temp).toFixed(\r\n      1\r\n    );\r\n    weather[day].avg.temp_celcius = parseFloat(\r\n      toCelsius(weather[day].avg.temp)\r\n    ).toFixed(1);\r\n    weather[day].avg.min_temp_celcius = parseFloat(\r\n      toCelsius(weather[day].avg.min_temp)\r\n    ).toFixed(1);\r\n    weather[day].avg.max_temp_celcius = parseFloat(\r\n      toCelsius(weather[day].avg.max_temp)\r\n    ).toFixed(1);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst LoadingPage = props => {\r\n  return (\r\n    <Grid container justify=\"center\" spacing={8}>\r\n      <h1> Loading...</h1>\r\n    </Grid>\r\n  );\r\n};\r\nexport default LoadingPage;\r\n","import React, { Component } from \"react\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nclass BarChart extends Component {\r\n  render() {\r\n    if (!this.props.data) {\r\n      return <h4>Click on a card </h4>;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <Chart\r\n          chartType=\"LineChart\"\r\n          height={300}\r\n          loader={<div>Loading Chart</div>}\r\n          data={this.props.data}\r\n          options={{\r\n            title: \"Temprature through the day\",\r\n            hAxis: {\r\n              title: \"Hour\",\r\n              minValue: 0\r\n            },\r\n            vAxis: {\r\n              title: \"Temprature\"\r\n            }\r\n          }}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default BarChart;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchData } from \"../util/utils.js\";\r\nimport { FETCH_WEATHER, FETCH_DAYS, FETCH_BARDATA } from \"../actions\";\r\nimport LoadingPage from \"./LoadingPage.js\";\r\nimport BarChart from \"./BarChart.js\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { ArrowBack, ArrowForward } from \"@material-ui/icons\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nexport class Weather extends Component {\r\n  state = {\r\n    units: \"Fahrenheit\",\r\n    showWeather: 0,\r\n    selectedValue: \"\"\r\n  };\r\n\r\n  handleUnitsChange = event => {\r\n    this.setState({\r\n      units: event.target.value,\r\n      selectedValue: \"\",\r\n      weatherBarDay: \"\",\r\n      deviceLimit: 3,\r\n      deviceDays: 2\r\n    });\r\n  };\r\n  handleBackArrowClick = event => {\r\n    this.setState({ showWeather: this.state.showWeather - 1 });\r\n  };\r\n  handleForwardArrowClick = event => {\r\n    this.setState({ showWeather: this.state.showWeather + 1 });\r\n  };\r\n  handleCardActionClick = value => {\r\n    this.setState({\r\n      weatherBarDay: this.props.barData[this.state.units][value],\r\n      selectedValue: value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchData(\r\n      \"https://api.openweathermap.org/data/2.5/forecast?q=Munich,de&units=imperial&APPID=bd8bbf2043083b52d632d5fbf02fd5ba&cnt=40\"\r\n    );\r\n    if (window.innerWidth <= 500) {\r\n      this.setState({ deviceLimit: 1, deviceDays: 4 });\r\n    } else {\r\n      this.setState({ deviceLimit: 3, deviceDays: 2 });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.weather) {\r\n      return <LoadingPage />;\r\n    }\r\n    return (\r\n      <Grid container className=\"Weather\">\r\n        <Grid container justify=\"center\">\r\n          <Typography variant=\"h4\">5 Day Weather Report</Typography>\r\n        </Grid>\r\n        <Grid container justify=\"center\">\r\n          <Typography variant=\"h6\" color=\"textSecondary\">\r\n            München\r\n          </Typography>\r\n        </Grid>\r\n        <Grid container justify=\"center\">\r\n          <Typography variant=\"h6\" color=\"textSecondary\">\r\n            {this.props.days[0].toString()}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid />\r\n        <Grid />\r\n        {/* radio buttons for temp selection */}\r\n        <Grid container justify=\"center\">\r\n          <RadioGroup\r\n            name=\"spacing\"\r\n            aria-label=\"Spacing\"\r\n            value={this.state.units.toString()}\r\n            onChange={this.handleUnitsChange}\r\n            row\r\n          >\r\n            {[\"Celcius\", \"Fahrenheit\"].map(value => (\r\n              <FormControlLabel\r\n                key={value}\r\n                value={value.toString()}\r\n                control={<Radio />}\r\n                label={value.toString()}\r\n              />\r\n            ))}\r\n          </RadioGroup>\r\n        </Grid>\r\n        {/*Arrows buttons for selection of cards displayed */}\r\n        <Grid container justify=\"space-between\">\r\n          <IconButton\r\n            disabled={this.state.showWeather === 0}\r\n            onClick={this.handleBackArrowClick}\r\n          >\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <IconButton\r\n            disabled={this.state.showWeather >= this.state.deviceDays}\r\n            onClick={this.handleForwardArrowClick}\r\n          >\r\n            <ArrowForward />\r\n          </IconButton>\r\n        </Grid>\r\n        {/*Temperature cards --even thou paper is enough using card for future when actions needs to be added*/}\r\n        <Grid container justify=\"center\" spacing={8}>\r\n          {this.props.days\r\n            .slice(\r\n              this.state.showWeather,\r\n              this.state.showWeather + this.state.deviceLimit\r\n            )\r\n            .map(value => (\r\n              <Grid key={value} item>\r\n                <Card\r\n                  className=\"card\"\r\n                  {...(this.state.selectedValue === value\r\n                    ? { style: { background: \"#26c6da\" } }\r\n                    : { style: { background: \"#fafafa\" } })}\r\n                >\r\n                  <CardActionArea\r\n                    onClick={() => this.handleCardActionClick(value)}\r\n                  >\r\n                    <CardContent>\r\n                      <Typography variant=\"h4\">{value.toString()}</Typography>\r\n                      <Divider light />\r\n                      {this.state.units === \"Fahrenheit\" ? (\r\n                        <>\r\n                          <Typography color=\"textSecondary\">\r\n                            Average Temperature :{\" \"}\r\n                            {this.props.weather[value].avg.temp}\r\n                          </Typography>\r\n                          <Typography color=\"textSecondary\">\r\n                            Minimum Temperature :{\" \"}\r\n                            {this.props.weather[value].avg.min_temp}\r\n                          </Typography>\r\n                          <Typography color=\"textSecondary\">\r\n                            Maximum Temperature :{\" \"}\r\n                            {this.props.weather[value].avg.max_temp}\r\n                          </Typography>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <Typography color=\"textSecondary\">\r\n                            Average Temperature :{\" \"}\r\n                            {this.props.weather[value].avg.temp_celcius}\r\n                          </Typography>\r\n                          <Typography color=\"textSecondary\">\r\n                            Minimum Temperature :{\" \"}\r\n                            {this.props.weather[value].avg.min_temp_celcius}\r\n                          </Typography>\r\n                          <Typography color=\"textSecondary\">\r\n                            Maximum Temperature :{\" \"}\r\n                            {this.props.weather[value].avg.max_temp_celcius}\r\n                          </Typography>\r\n                        </>\r\n                      )}\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={12}>\r\n            <BarChart data={this.state.weatherBarDay} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    weather: state.fetchData.FETCH_WEATHER,\r\n    days: state.fetchData.FETCH_DAYS,\r\n    isLoading: state.fetchData.IS_LOADING,\r\n    barData: state.fetchData.FETCH_BARDATA\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchData: url => dispatch(fetchData(url))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Weather);\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return <h1>Oops!!!Something went wrong.</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from \"react\";\r\nimport \"../util/App.css\";\r\n\r\nimport Weather from \"./Weather.js\";\r\nimport ErrorBoundary from \"./ErrorBoundary.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ErrorBoundary>\r\n      <div className=\"App\">\r\n        <Weather />\r\n      </div>\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  FETCH_DATA_SUCCESS,\r\n  HAS_ERRORED,\r\n  IS_LOADING,\r\n  FETCH_WEATHER,\r\n  FETCH_BARDATA\r\n} from \"../actions/fetchData\";\r\n\r\nconst initialstate = {\r\n  weather: {},\r\n  IS_LOADING: false,\r\n  HAS_ERRORED: false\r\n};\r\n\r\nexport function fetchData(state = initialstate, action) {\r\n  const { data, isLoading, hasErrored } = action;\r\n  switch (action.type) {\r\n    case FETCH_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        FETCH_DAYS: data[0],\r\n        FETCH_WEATHER: data[1],\r\n        FETCH_BARDATA: data[2]\r\n      };\r\n    case IS_LOADING:\r\n      return {\r\n        ...state,\r\n        IS_LOADING: isLoading\r\n      };\r\n    case HAS_ERRORED:\r\n      return {\r\n        ...state,\r\n        HAS_ERRORED: hasErrored\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default fetchData;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { fetchData } from \"./fetchData_reducer\";\r\n\r\nexport default combineReducers({\r\n  fetchData\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport \"./util/index.css\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./util/serviceWorker\";\r\nimport reducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}